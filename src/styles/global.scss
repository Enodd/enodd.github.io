@charset 'UTF-8';
@use './palette' as palette;
@use './utils' as utils;
@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

@mixin pageBackground() {
    background:
    radial-gradient(circle at top left, palette.getColor(background, orangeFlare) 0, transparent 50%) top left,
    radial-gradient(circle at right, palette.getColor(secondary) 0%, transparent 45%) right,
    radial-gradient(circle at bottom left, palette.getColor(background, magentaFlare) 0%, transparent 40%);
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    color: white;
    font-family: 'Rubik', sans-serif;
    @include utils.fontSize('400');
}

html body {
    @include pageBackground();
    background-color: palette.getColor(background);
    background-size: cover;
    background-repeat: no-repeat;
}

a {
    text-decoration: none;
}

main {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 3rem 5rem 0;
    @include utils.breakpointDown('lg'){
        padding: 2rem 3rem;
    }
    @include utils.breakpointDown('md'){
        padding: 1rem 1rem 0;
    }
}

.container {
    width: 100%;
    min-height: 100vh;
    min-height: 100svh;
}

.button {
    cursor: pointer;
    border: none;
    @include utils.fontSize('600');
    &--transparentBg {
        background: transparent;
    }
}

.list {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    list-style: none;
    &--horizontal {
        flex-direction: row;
    }
}

.stack {
    display: flex;
    &--vertical {
        flex-direction: column;
    }
}